@startuml C2
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
' uncomment the following line and comment the first to use locally
' !include C4_Container.puml



!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/react.puml
!include DEVICONS/java.puml
!include DEVICONS/mongodb.puml
!include FONTAWESOME/users.puml

LAYOUT_LANDSCAPE()

AddContainerTag("webApp", $sprite="application_server", $legendText="web app container")
AddContainerTag("db", $sprite="database_server", $legendText="database container")
'AddContainerTag("files", $sprite="file_server", $legendText="file server container")
AddContainerTag("conApp", $sprite="service_application", $legendText="console app container")
'AddContainerTag("externalsystem", $legendText="external system", bgColor="")

AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="white")

Person(user, "Users", "A person who has an account in the system. The user is a novice fitness gym-member", $sprite="users")
System_Boundary(c1, "FATT") {
    Container(Web_api, "Web Api", "Container: C#, ASP.NET Core 6 Web API", "Provides user access, notifications and exercises functionality via a JSON/HTTPS API.")
    ContainerDb(db, "Database", "Container: MongoDB, NoSQL", "Store user registration, exercises and the combustion registration information, hashed authentication credentials, access log.", $sprite="mongodb")
    Container(Web_app, "Web application", "Container: React, Javascript, Client", "Delivers the static content and the training (single) page application", $sprite="react")
    
}

System_Ext(mails, "E-Mail System", "Not yet know" )

Rel_Down(user, Web_app, "Visits fatt.dk", "HTTPS")
Rel_Up(Web_api, mails,"Sends notification using","SMTP")
Rel_Left(mails, user,"Sends notification to","SMTP")
Rel(Web_api, db, "Reads from and writes to", "JSON/HTTPS")
Rel(Web_app, Web_api, "Make API calls to", "JSON/HTTPS")

SHOW_LEGEND()

@enduml