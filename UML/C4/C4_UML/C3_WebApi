@startuml C4_WebApi
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
' uncomment the following line and comment the first to use locally
' !include C4_Container.puml




!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/react.puml
!include DEVICONS/java.puml
!include DEVICONS/mongodb.puml
!include FONTAWESOME/users.puml

AddContainerTag("webApp", $sprite="application_server", $legendText="web app container")
AddContainerTag("db", $sprite="database_server", $legendText="database container")
AddContainerTag("files", $sprite="file_server", $legendText="file server container")
AddContainerTag("conApp", $sprite="service_application", $legendText="console app container")


AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="white")

Person(user, "Users", "A person who has an account in the system. The user is a novice fitness gym-member", $sprite="users")
System_Boundary(c2, "APIWeb") {
    Container(c_user, "User Controller", "C#, ASP.NET Core 6 Web API", "")
    Container(c_signin, "Sign-in Controller", "C#, ASP.NET Core 6 Web API", "")
    Container(c_signup, "Sign-up Controller", "C#, ASP.NET Core 6 Web API")
    Container(c_workout, "Workout Controller", "User can get a workout")
    Container(c_meal, "Meal Controller", "User can get a meal")
    Container(c_calendar, "Calendar Controller", "User can get a calendar")
    
    Container(m_user, "User Model", "")
    Container(m_workout, "Workout Model", "")
    Container(m_meal, "Meal Model", "")
    Container(m_calendar, "Calendar Model", "")
    Container(m_exercise, "Exercise Model", "")
    Container(m_milestone, "Milestone Model", "")
    Container(m_dish, "Dish Model", "")
}

ContainerDb(db, "Database", "MongoDB, NoSQL", "Store user registration, exercises and the combustion registration information, hashed authentication credentials, access log.", $sprite="mongodb")

Container(Web_app, "Web application", "React, Javasprict, Client", "Delivers the static content and the training (single) page application", $sprite="react")

System_Ext(mails, "E-Mail System", "Not yet known" )


Rel(Web_app, c_user, "Make API calls to", "JSON")
Rel(Web_app, c_workout, "Make API calls to", "JSON")
Rel(Web_app, c_signin, "Make API calls to", "JSON")
Rel(Web_app, c_signup, "Make API calls to", "JSON")
Rel(Web_app, c_meal, "Make API calls to", "JSON")
Rel(Web_app, c_calendar, "Make API calls to", "JSON")



Rel(user, Web_app, "Interract", "HTTPS")
Rel_Up(c2, mails,"Sends notification using","SMTP")
Rel_Left(mails, user,"Sends notification to","SMTP")

Rel(c_signup, m_user, "Uses", )
Rel(c_signin, m_user, "Uses", )
Rel(c_workout, m_workout, "Uses", )
Rel(c_user, m_user, "Adds user to", )
Rel(c_meal, m_meal, "Gets meal from", )
Rel(c_calendar, m_calendar, "Gets calendar from", )

Rel(m_meal, m_dish, "Has", )
Rel(m_workout, m_exercise, "Has", )
Rel(m_user, db, "Uses")
Rel(m_user, m_milestone, "Has", )

SHOW_LEGEND()

@enduml

