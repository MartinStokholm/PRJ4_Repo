# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
env: 
  Project_Path: ./FATT_frontend/FATT_NEXT/fatt/
  Test_Path: $Project_Path

on:
  push:
    branches: [ "develepment" ]
  pull_request:
    branches: [ "develepment" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      env:
        CI: ""
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '$Project_Path/package-lock.json'
        
    - run: npm ci $Project_Path
    - run: npm run build $Project_Path --if-present
      env:
        CI: ""
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      env:
        CI: ""
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci $Project_Path
    - run: npm run build $Project_Path --if-present
      env:
        CI: ""
    - run: npm run test $Test_Path -- --ci --watchAll=false
      env:
        CI: ""
